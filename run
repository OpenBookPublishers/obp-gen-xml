#!/bin/bash

set -eu
cd $(dirname $0)

book_name=$1
work_dir=$(mktemp -d -t obp-gen-xml-XXXXXX)

cleanup () {
    local rv=$?
    rm -rf -- "$work_dir"
    exit $rv
}

trap cleanup EXIT

convert () {
    # Run the python script and XSL file of the XML-last repo
    cd $work_dir

    xref_schema=`python3 src/extract_schema_version.py "$book_name".xml`
    
    echo "running XML-before-transformation.py"
    python2.7 XML-before-transformation.py

    echo "running Transform-to-XML-section_tailored.xsl"
    python3 src/tailor_section_transformation.py \
	       Transform-to-XML-section.xsl \
	       Transform-to-XML-section_tailored.xsl \
	       --version $xref_schema
    
    saxonb-xslt -s:Transform-to-XML-section_tailored.xsl \
		-xsl:Transform-to-XML-section_tailored.xsl \
		-o:Transform-to-XML-section_tailored.xsl \
		-ext:on

    echo "running Transform-to-XML-book_tailored.xsl"
    python3 src/tailor_book_transformation.py \
	       Transform-to-XML-book.xsl \
	       Transform-to-XML-book_tailored.xsl \
	       --version $xref_schema

    saxonb-xslt -s:Transform-to-XML-book_tailored.xsl \
		-xsl:Transform-to-XML-book_tailored.xsl \
		-xi:on \
		-ext:on

    echo "running XML-after-transformation.py"
    python2.7 XML-after-transformation.py

    # Create a zip archive of the XML edition
    find . -name '*.zip' | while read file; do
	filename=$(basename -- ${file%.*})
	zip -rq ${filename}.xml.zip XML-edition/

	echo "created ./${filename}.xml.zip"
    done
}


echo "Copy relevant files to work directory"
cp ${book_name}.epub $work_dir
cp ${book_name}.xml $work_dir
cp -r XML-last/. $work_dir
cp -r src/ $work_dir

(convert)

cp $work_dir/${book_name}.xml.zip .
